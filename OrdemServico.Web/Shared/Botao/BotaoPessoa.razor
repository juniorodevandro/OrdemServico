@inject IDialogService DialogService
@inject ISnackbar Snackbar

<MudIconButton Icon="@Icons.Material.Filled.Add" Edge="Edge.End" Color="Color.Success" Size="Size.Large" OnClick="@(() => AddPessoa(mudTable))" />
<MudIconButton Icon="@Icons.Material.Filled.Edit" Edge="Edge.End" Color="Color.Warning" Size="Size.Large" OnClick="@(() => EditPessoa(mudTable))" />
<MudIconButton Icon="@Icons.Material.Filled.Delete" Edge="Edge.End" Color="Color.Error" Size="Size.Large" />
<MudSpacer />
<MudTextField @bind-Value="searchString" Variant="Variant.Outlined" Placeholder="Pesquisar" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium"
              Class="width: 250px justify-end" />

@code {
    [Parameter]
    public MudTable<PessoaGetDTO> mudTable { get; set; } = new();

    private string searchString = "";

    private void EditPessoa(MudTable<PessoaGetDTO> mudTable)
    {
        if (mudTable.SelectedItem == null)
        {
            Snackbar.Add("Nenhum registro selecionado", Severity.Error);
        }
        else
        {
            DialogService.Show<FormPessoa>($"Editar pessoa - {mudTable.SelectedItem.SituacaoNome}", 
                                          new DialogParameters { { "Pessoa", mudTable.SelectedItem }, { "PessoaId", mudTable.SelectedItem.Id }, { "IsEditMode", true }  },
                                          new DialogOptions {MaxWidth = MaxWidth.Medium, FullWidth = true});
        }
    }

    private void AddPessoa(MudTable<PessoaGetDTO> mudTable)
    {
        DialogService.Show<FormPessoa>($"Adicionar pessoa",
                                        new DialogOptions { MaxWidth = MaxWidth.Medium, FullWidth = true });
    }
}