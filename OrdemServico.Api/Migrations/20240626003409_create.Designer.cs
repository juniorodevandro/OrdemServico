// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrdemServico.Data;

#nullable disable

namespace OrdemServico.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240626003409_create")]
    partial class create
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrdemServico.Api.Entities.Ordem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Desconto")
                        .HasColumnType("int");

                    b.Property<string>("NumeroControle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("QuantidadeProduto")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("SituacaoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorBruto")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorLiquido")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("SituacaoId");

                    b.HasIndex("TipoId");

                    b.ToTable("Ordem");
                });

            modelBuilder.Entity("OrdemServico.Api.Entities.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Contato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("SituacaoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SituacaoId");

                    b.HasIndex("TipoId");

                    b.ToTable("Pessoa");
                });

            modelBuilder.Entity("OrdemServico.Api.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SituacaoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SituacaoId");

                    b.HasIndex("TipoId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("OrdemServico.Api.Entities.ServicoOrdem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdemId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Sequencial")
                        .HasColumnType("int");

                    b.Property<int>("SituacaoId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrdemId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("SituacaoId");

                    b.ToTable("ServicoOrdem");
                });

            modelBuilder.Entity("OrdemServico.Api.Entities.Situacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Icone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Situacao");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = 1,
                            Nome = "Cadastrado"
                        },
                        new
                        {
                            Id = 2,
                            Codigo = 2,
                            Nome = "Ag modificação"
                        },
                        new
                        {
                            Id = 3,
                            Codigo = 3,
                            Nome = "Ag aprovação"
                        },
                        new
                        {
                            Id = 4,
                            Codigo = 4,
                            Nome = "Ativo"
                        },
                        new
                        {
                            Id = 5,
                            Codigo = 5,
                            Nome = "Cancelado"
                        });
                });

            modelBuilder.Entity("OrdemServico.Api.Entities.TipoOrdem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoOrdem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = 1,
                            Nome = "Manutenção"
                        },
                        new
                        {
                            Id = 2,
                            Codigo = 2,
                            Nome = "Compra"
                        },
                        new
                        {
                            Id = 3,
                            Codigo = 3,
                            Nome = "Venda"
                        });
                });

            modelBuilder.Entity("OrdemServico.Api.Entities.TipoPessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoPessoa");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = 1,
                            Nome = "Física"
                        },
                        new
                        {
                            Id = 2,
                            Codigo = 2,
                            Nome = "Jurídica"
                        },
                        new
                        {
                            Id = 3,
                            Codigo = 3,
                            Nome = "Outro"
                        });
                });

            modelBuilder.Entity("OrdemServico.Api.Entities.TipoProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoProduto");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = 1,
                            Nome = "Próprio"
                        },
                        new
                        {
                            Id = 2,
                            Codigo = 2,
                            Nome = "Terceiro"
                        },
                        new
                        {
                            Id = 3,
                            Codigo = 3,
                            Nome = "Mão de obra"
                        });
                });

            modelBuilder.Entity("OrdemServico.Api.Entities.Ordem", b =>
                {
                    b.HasOne("OrdemServico.Api.Entities.Pessoa", "Cliente")
                        .WithMany("Ordem")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OrdemServico.Api.Entities.Situacao", "Situacao")
                        .WithMany("Ordem")
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OrdemServico.Api.Entities.TipoOrdem", "Tipo")
                        .WithMany("Ordem")
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Situacao");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("OrdemServico.Api.Entities.Pessoa", b =>
                {
                    b.HasOne("OrdemServico.Api.Entities.Situacao", "Situacao")
                        .WithMany("Pessoa")
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OrdemServico.Api.Entities.TipoPessoa", "Tipo")
                        .WithMany("Pessoa")
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Situacao");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("OrdemServico.Api.Entities.Produto", b =>
                {
                    b.HasOne("OrdemServico.Api.Entities.Situacao", "Situacao")
                        .WithMany("Produto")
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OrdemServico.Api.Entities.TipoProduto", "Tipo")
                        .WithMany("Produto")
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Situacao");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("OrdemServico.Api.Entities.ServicoOrdem", b =>
                {
                    b.HasOne("OrdemServico.Api.Entities.Ordem", "Ordem")
                        .WithMany("ServicoOrdem")
                        .HasForeignKey("OrdemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OrdemServico.Api.Entities.Produto", "Produto")
                        .WithMany("OrdemServico")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OrdemServico.Api.Entities.Situacao", "Situacao")
                        .WithMany("ServicoOrdem")
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Ordem");

                    b.Navigation("Produto");

                    b.Navigation("Situacao");
                });

            modelBuilder.Entity("OrdemServico.Api.Entities.Ordem", b =>
                {
                    b.Navigation("ServicoOrdem");
                });

            modelBuilder.Entity("OrdemServico.Api.Entities.Pessoa", b =>
                {
                    b.Navigation("Ordem");
                });

            modelBuilder.Entity("OrdemServico.Api.Entities.Produto", b =>
                {
                    b.Navigation("OrdemServico");
                });

            modelBuilder.Entity("OrdemServico.Api.Entities.Situacao", b =>
                {
                    b.Navigation("Ordem");

                    b.Navigation("Pessoa");

                    b.Navigation("Produto");

                    b.Navigation("ServicoOrdem");
                });

            modelBuilder.Entity("OrdemServico.Api.Entities.TipoOrdem", b =>
                {
                    b.Navigation("Ordem");
                });

            modelBuilder.Entity("OrdemServico.Api.Entities.TipoPessoa", b =>
                {
                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("OrdemServico.Api.Entities.TipoProduto", b =>
                {
                    b.Navigation("Produto");
                });
#pragma warning restore 612, 618
        }
    }
}
